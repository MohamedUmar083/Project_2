/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-12-22 21:15:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public final class favorite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    // Retrieve the user ID from the session
    String userId = (String) session.getAttribute("userId");

    if (userId != null && !userId.isEmpty()) {
        try {
            // Database connection details
             String jdbcUrl = "jdbc:mysql://localhost:3306/railwayproject";
                String dbUsername = "root";
                String dbPassword = "Mohdumar@1011302";


            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(jdbcUrl, dbUsername, dbPassword);

            // Query to retrieve favorite trains for the logged-in user
            String sql = "SELECT t.* FROM user_favorite uf INNER JOIN trains t ON uf.train_id = t.id WHERE uf.user_id = ?";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, userId);

                try (ResultSet resultSet = statement.executeQuery()) {

      out.write("\r\n");
      out.write("                    <!DOCTYPE html>\r\n");
      out.write("                    <html>\r\n");
      out.write("                    <head>\r\n");
      out.write("                        <title>Favorite Train Details</title>\r\n");
      out.write("                    </head>\r\n");
      out.write("                    <body>\r\n");
      out.write("                    <form action=\"user-dashboard.jsp\" method=\"get\" style=\"position: absolute; top: 10px; right: 150px;\">\r\n");
      out.write("                        <input type=\"submit\" value=\"User Dashboard\">\r\n");
      out.write("                    </form>\r\n");
      out.write("                        <h1>Favorite Train Details</h1>\r\n");
      out.write("                        <table border=\"1\">\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>Train Name</th>\r\n");
      out.write("                                    <th>Status</th>\r\n");
      out.write("                                    <th>Person in Charge</th>\r\n");
      out.write("                                    <th>Schedule</th>\r\n");
      out.write("                                    <th>Landmark</th>\r\n");
      out.write("                                    <th>Address</th>\r\n");
      out.write("                                    <th>Action</th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </thead>\r\n");
      out.write("                            <tbody>\r\n");

                            while (resultSet.next()) {
                            	String trainId = resultSet.getString("id");
                                String trainName = resultSet.getString("train_name");
                                String status = resultSet.getString("crossing_status");
                                String personInCharge = resultSet.getString("person_in_charge");
                                String schedule = resultSet.getString("train_schedule");
                                String landmark = resultSet.getString("landmark");
                                String address = resultSet.getString("address");

      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>");
      out.print( trainName );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( status );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( personInCharge );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( schedule );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( landmark );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( address );
      out.write("</td>\r\n");
      out.write("                                    <td>\r\n");
      out.write("        <form action=\"remove-favorite.jsp\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"trainId\" value=\"");
      out.print(trainId);
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Remove\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </td>\r\n");
      out.write("                                </tr>\r\n");

                            }
                        }
                    }
                } catch (SQLException e) {
                    e.printStackTrace(); // Handle the exception appropriately in your application
                }
            }
         else {
            // Handle the case where the user is not logged in
            response.sendRedirect("user-login.jsp");
        }

      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </body>\r\n");
      out.write("            </html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
